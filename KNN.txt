Importing Libraries

from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.datasets import load_iris
import random

import warnings
warnings.filterwarnings("ignore")

Loading Datasets

data_iris = load_iris()
label_target = data_iris.target_names

Printing random Data from DataFrame

label_target = data_iris.target_names
print("\n Sample Data from Iris Dataset")
print("*" * 30)
for i in range(5):
    rn = random.randint(0, 120)
    print(data_iris.data[rn], "===>", label_target[data_iris.target[rn]])

 Sample Data from Iris Dataset
******************************
[6.  2.2 4.  1. ] ===> versicolor
[4.8 3.  1.4 0.1] ===> setosa
[6.9 3.1 4.9 1.5] ===> versicolor
[4.7 3.2 1.6 0.2] ===> setosa
[6.8 3.  5.5 2.1] ===> virginica

Extracting Feature Matrix and Target Vector

x = data_iris.data
y = data_iris.target

Spliting the data into train and test data

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.3, random_state=1)
print("The Training dataset length : ", len(x_train))
print("The Testing dataset length : ", len(x_test))

The Training dataset length :  105
The Testing dataset length :  45

Training and Predicting the values

try:
    nn = int(input("Enter number of neighbours : "))
    knn = KNeighborsClassifier(nn)
    knn.fit(x_train, y_train)
    print("The Score is : ", knn.score(x_test, y_test))
    test_data = input("Ente Test Data :").split(",")
    for i in range(len(test_data)):
        test_data[i] = float(test_data[i])
    print()
    v = knn.predict([test_data])
    print("Predicted outputis :", label_target[v][0])
except Exception as e:
    print("Enter Valid Input...")
    print(e)

Enter number of neighbours : 5
The Score is :  0.9777777777777777
Ente Test Data :5.0, 2.5, 1.2, 7.5

Predicted outputis : virginica